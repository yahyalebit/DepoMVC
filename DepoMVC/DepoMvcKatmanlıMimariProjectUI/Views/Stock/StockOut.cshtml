@model DepoMvcKatmanlıMimariProjectUI.Models.StockOutViewModel

@{
    ViewBag.Title = "Stok Çıkar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="d-flex justify-content-center">
        <div class="card shadow-lg p-4 w-50">
            <h2 class="text-center text-danger mb-4">Stok Çıkar</h2>
            <div class="card-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="mb-3">
                        @Html.LabelFor(model => model.ProductID, "Ürün Seçiniz", new { @class = "form-label fw-bold" })
                        @Html.DropDownListFor(model => model.ProductID, (IEnumerable<SelectListItem>)ViewBag.Products, "Ürün Seçiniz", new { @class = "form-select", id = "ProductID" })
                        @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.CustomerID, "Müşteri Seçiniz", new { @class = "form-label fw-bold" })
                        @Html.DropDownListFor(model => model.CustomerID, (IEnumerable<SelectListItem>)ViewBag.Customers, "Müşteri Seçiniz", new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.EmployeeID, "Stok Çıkartan Personel", new { @class = "form-label fw-bold" })
                        @Html.DropDownListFor(model => model.EmployeeID, (IEnumerable<SelectListItem>)ViewBag.Employees, "Personel Seçiniz", new { @class = "form-select" })
                        @Html.ValidationMessageFor(model => model.EmployeeID, "", new { @class = "text-danger" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(model => model.Quantity, "Çıkartılacak Stok Miktarı", new { @class = "form-label fw-bold" })
                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", placeholder = "Miktar girin", id = "Quantity" } })
                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger fw-bold" })
                    </div>

                    <div class="text-center mt-4">
                        <button type="submit" class="btn btn-danger px-4" onclick="return validateStock()">
                            <i class="bi bi-box-arrow-down"></i> Stok Çıkar
                        </button>
                        <a href="@Url.Action("StockOutHistory")" class="btn btn-outline-secondary px-4">
                            <i class="bi bi-clock-history"></i> Stok Çıkarma Geçmişi
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>